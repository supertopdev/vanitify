<?php    	$saasappoint = session_id();	if(empty($saasappoint)) session_start();ob_start();/* Include class files */include(dirname(dirname(dirname(dirname(__FILE__))))."/constants.php");include(dirname(dirname(dirname(dirname(__FILE__))))."/classes/class_connection.php");include(dirname(dirname(dirname(dirname(__FILE__))))."/classes/class_frontend.php");include(dirname(dirname(dirname(dirname(__FILE__))))."/classes/class_settings.php");include("init.php");/* Create object of classes */$obj_database = new saasappoint_database();$conn = $obj_database->connect();$obj_frontend = new saasappoint_frontend();$obj_frontend->conn = $conn;$obj_frontend->business_id = $_SESSION['business_id'];$obj_settings = new saasappoint_settings();$obj_settings->conn = $conn;$obj_settings->business_id = $_SESSION['business_id'];$skey = $obj_settings->get_option('saasappoint_stripe_secret_key');$currency = $obj_settings->get_option('saasappoint_currency');$token = $_SESSION['saasappoint_stripe_token'];$obj_frontend->category_id = $_SESSION['saasappoint_cart_category_id'];$obj_frontend->service_id = $_SESSION['saasappoint_cart_service_id'];$category_title = $obj_frontend->readone_category_name();$service_title = $obj_frontend->readone_service_name();$description = ucwords($_SESSION['saasappoint_customer_detail']['firstname'].' '.$_SESSION['saasappoint_customer_detail']['lastname'])." booked appointment. ".$category_title." for ".$service_title." on ".$_SESSION['saasappoint_cart_datetime']." to ".$_SESSION['saasappoint_cart_end_datetime'];$email = $_SESSION['saasappoint_customer_detail']['email'];$net_total = $_SESSION['saasappoint_cart_nettotal'];try {	\Stripe\Stripe::setApiKey($skey);	$charge = \Stripe\Charge::create([		'amount' => round($net_total*100),		'currency' => $currency,		'description' => $description,		'source' => $token,		'receipt_email' => $email	]);		$transaction_id = $charge->id;	$_SESSION["transaction_id"] = $transaction_id;	$return_response = array ( 'status' => true, 'transaction_id'=>$transaction_id);	echo json_encode($return_response);	exit;}catch (Exception $e) {	$error = $e->getMessage();	$return_response = array ('status' => false, 'error' => $error);	echo json_encode($return_response);	exit;}