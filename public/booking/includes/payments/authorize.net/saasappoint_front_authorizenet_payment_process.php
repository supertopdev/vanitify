<?php    	$saasappoint = session_id();	if(empty($saasappoint)) session_start();ob_start();/* Include class files */include(dirname(dirname(dirname(dirname(__FILE__))))."/constants.php");include(dirname(dirname(dirname(dirname(__FILE__))))."/classes/class_connection.php");include(dirname(dirname(dirname(dirname(__FILE__))))."/classes/class_settings.php");include("autoload.php");/* Create object of classes */$obj_database = new saasappoint_database();$conn = $obj_database->connect();$obj_settings = new saasappoint_settings();$obj_settings->conn = $conn;$obj_settings->business_id = $_SESSION['business_id'];$saasappoint_authorizenet_api_login_id = $obj_settings->get_option('saasappoint_authorizenet_api_login_id');$saasappoint_authorizenet_transaction_key = $obj_settings->get_option('saasappoint_authorizenet_transaction_key');$testmode = "off";if($testmode=='on'){   	define('AUTHORIZENET_SANDBOX',true); }else{  	define('AUTHORIZENET_SANDBOX',false);}$payment_response = null;$net_total = $_SESSION['saasappoint_cart_nettotal'];define('AUTHORIZENET_API_LOGIN_ID',$saasappoint_authorizenet_api_login_id);define('AUTHORIZENET_TRANSACTION_KEY',$saasappoint_authorizenet_transaction_key);$expirydate = $_SESSION['saasappoint_card_exp_month'].'/'.$_SESSION['saasappoint_card_exp_year'];$aim_sale = new AuthorizeNetAIM();$aim_sale->amount     = $net_total;$aim_sale->card_num   = $_SESSION['saasappoint_card_num'];$aim_sale->card_code  = $_SESSION['saasappoint_card_cvv'];$aim_sale->exp_date   = $expirydate;$aim_sale->first_name = ucwords($_SESSION['saasappoint_customer_detail']['firstname'].' '.$_SESSION['saasappoint_customer_detail']['lastname']);$aim_sale->email      = $_SESSION['saasappoint_customer_detail']['email'];$aim_sale->phone      = $_SESSION['saasappoint_customer_detail']['phone'];$payment_response = $aim_sale->authorizeAndCapture();if ( $payment_response->approved ) {					$_SESSION["transaction_id"] = $payment_response->transaction_id;	$return_response = array ( 'status' => true, 'transaction_id'=>$payment_response->transaction_id);	echo json_encode($return_response);	exit;} else {	$return_response = array ('status' => false, 'error' => $payment_response->error_message);	echo json_encode($return_response);	exit;}?>